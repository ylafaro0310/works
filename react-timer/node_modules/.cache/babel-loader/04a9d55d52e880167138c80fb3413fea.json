{"ast":null,"code":"var _jsxFileName = \"/home/ylafaro/prog/react-timer/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ProgressBar from './ProgressBar';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startedTime: null,\n      // 開始時刻\n      nowTime: null,\n      // 現在時刻\n      setMinutes: 0,\n      // 設定時間(分単位)\n      setIntervalId: null // setIntervalのid\n\n    };\n    this.countdown = this.countdown.bind(this);\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n  }\n\n  countdown() {\n    this.setState({\n      nowTime: Date()\n    });\n  }\n\n  onStart() {\n    const id = setInterval(this.countdown, 500);\n    this.setState({\n      startedTime: Date(),\n      setIntervalId: id\n    });\n  }\n\n  onStop() {\n    const {\n      setIntervalId\n    } = this.state;\n    clearInterval(setIntervalId);\n    this.setState({\n      nowTime: Date(),\n      setIntervalId: null\n    });\n  }\n\n  onCancel() {\n    const {\n      setIntervalId\n    } = this.state;\n    clearInterval(setIntervalId);\n    this.setState({\n      startedTime: null,\n      nowTime: null,\n      setIntervalId: null\n    });\n  }\n\n  render() {\n    const {\n      setIntervalId,\n      nowTime,\n      startedTime,\n      setTime\n    } = this.state;\n    const elapsedTime = nowTime - startedTime;\n    const progress = startedTime ? elapsedTime / setTime : 100;\n    const time = startedTime ? setTime - elapsedTime : setTime;\n    const text = time / 3600 + ':' + time / 60 + ':' + time % 3600;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      stroke: 5,\n      radius: 200,\n      progress: progress || 100,\n      text: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginRight: '120px'\n      },\n      className: 'button' + (setIntervalId ? '' : ' button-disabled'),\n      type: \"button\",\n      disabled: setIntervalId ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      type: \"button\",\n      onClick: setIntervalId ? this.onStop() : this.onStart(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, setIntervalId ? '停止' : '開始')));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ylafaro/prog/react-timer/src/App.js"],"names":["React","ProgressBar","App","Component","constructor","props","state","startedTime","nowTime","setMinutes","setIntervalId","countdown","bind","onStart","onStop","setState","Date","id","setInterval","clearInterval","onCancel","render","setTime","elapsedTime","progress","time","text","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,IADF;AACQ;AACnBC,MAAAA,OAAO,EAAE,IAFE;AAEI;AACfC,MAAAA,UAAU,EAAE,CAHD;AAGI;AACfC,MAAAA,aAAa,EAAE,IAJJ,CAIU;;AAJV,KAAb;AAOA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDD,EAAAA,SAAS,GAAE;AACT,SAAKI,QAAL,CAAc;AAACP,MAAAA,OAAO,EAAEQ,IAAI;AAAd,KAAd;AACD;;AAEDH,EAAAA,OAAO,GAAE;AACP,UAAMI,EAAE,GAAGC,WAAW,CAAC,KAAKP,SAAN,EAAgB,GAAhB,CAAtB;AACA,SAAKI,QAAL,CAAc;AACZR,MAAAA,WAAW,EAAES,IAAI,EADL;AAEZN,MAAAA,aAAa,EAAEO;AAFH,KAAd;AAID;;AAEDH,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEJ,MAAAA;AAAF,QAAoB,KAAKJ,KAA/B;AACAa,IAAAA,aAAa,CAACT,aAAD,CAAb;AACA,SAAKK,QAAL,CAAc;AACZP,MAAAA,OAAO,EAAEQ,IAAI,EADD;AAEZN,MAAAA,aAAa,EAAE;AAFH,KAAd;AAID;;AAEDU,EAAAA,QAAQ,GAAE;AACR,UAAM;AAAEV,MAAAA;AAAF,QAAoB,KAAKJ,KAA/B;AACAa,IAAAA,aAAa,CAACT,aAAD,CAAb;AAEA,SAAKK,QAAL,CAAc;AACZR,MAAAA,WAAW,EAAE,IADD;AAEZC,MAAAA,OAAO,EAAE,IAFG;AAGZE,MAAAA,aAAa,EAAE;AAHH,KAAd;AAKD;;AAEDW,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEX,MAAAA,aAAF;AAAiBF,MAAAA,OAAjB;AAA0BD,MAAAA,WAA1B;AAAuCe,MAAAA;AAAvC,QAAmD,KAAKhB,KAA9D;AACA,UAAMiB,WAAW,GAAGf,OAAO,GAAGD,WAA9B;AACA,UAAMiB,QAAQ,GAAGjB,WAAW,GAAIgB,WAAW,GAAGD,OAAlB,GAA4B,GAAxD;AACA,UAAMG,IAAI,GAAGlB,WAAW,GAAGe,OAAO,GAAGC,WAAb,GAA2BD,OAAnD;AACA,UAAMI,IAAI,GAAGD,IAAI,GAAG,IAAP,GAAc,GAAd,GAAoBA,IAAI,GAAG,EAA3B,GAAgC,GAAhC,GAAsCA,IAAI,GAAG,IAA1D;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAE,CADV;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,QAAQ,EAAED,QAAQ,IAAI,GAHxB;AAIE,MAAA,IAAI,EAAEE,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAE;AAAd,OADT;AAEE,MAAA,SAAS,EAAE,YAAUjB,aAAa,GAAG,EAAH,GAAQ,kBAA/B,CAFb;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAEA,aAAa,GAAG,KAAH,GAAW,IAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,eAQE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAEA,aAAa,GAAG,KAAKI,MAAL,EAAH,GAAmB,KAAKD,OAAL,EAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGH,aAAa,GAAG,IAAH,GAAU,IAL1B,CARF,CAPF,CADF;AA0BD;;AAhF+B;;AAmFlC,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport ProgressBar from './ProgressBar';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      startedTime: null, // 開始時刻\n      nowTime: null, // 現在時刻\n      setMinutes: 0, // 設定時間(分単位)\n      setIntervalId: null, // setIntervalのid\n    }\n\n    this.countdown = this.countdown.bind(this);\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n  }\n\n  countdown(){\n    this.setState({nowTime: Date()});\n  }\n\n  onStart(){\n    const id = setInterval(this.countdown,500);\n    this.setState({\n      startedTime: Date(), \n      setIntervalId: id\n    })\n  }\n\n  onStop(){\n    const { setIntervalId } = this.state;\n    clearInterval(setIntervalId);\n    this.setState({\n      nowTime: Date(), \n      setIntervalId: null\n    })\n  }\n\n  onCancel(){\n    const { setIntervalId } = this.state;\n    clearInterval(setIntervalId);\n\n    this.setState({\n      startedTime: null,\n      nowTime: null,\n      setIntervalId: null,\n    })\n  }\n\n  render(){\n    const { setIntervalId, nowTime, startedTime, setTime } = this.state;\n    const elapsedTime = nowTime - startedTime;\n    const progress = startedTime ?  elapsedTime / setTime : 100; \n    const time = startedTime ? setTime - elapsedTime : setTime;\n    const text = time / 3600 + ':' + time / 60 + ':' + time % 3600; \n\n    return (\n      <div className=\"App\">\n        <ProgressBar \n          stroke={5}\n          radius={200}\n          progress={progress || 100}\n          text={text}\n        />\n        <div>\n          <button \n            style={{marginRight: '120px'}} \n            className={'button'+(setIntervalId ? '' : ' button-disabled')} \n            type='button' \n            disabled={setIntervalId ? false : true}>\n              キャンセル\n          </button>\n          <button \n            className='button' \n            type='button'\n            onClick={setIntervalId ? this.onStop() : this.onStart()}\n          >\n            {setIntervalId ? '停止' : '開始'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}