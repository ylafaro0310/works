{"ast":null,"code":"var _jsxFileName = \"/home/ylafaro/prog/react-timer/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ProgressBar from './ProgressBar';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startedTime: null,\n      // 開始時刻\n      nowTime: null,\n      // 現在時刻\n      setSeconds: 10,\n      // 設定時間(秒単位)\n      elapsedTime: 0,\n      // 経過時間(秒単位)\n      setIntervalId: null // setIntervalのid\n\n    };\n    this.countdown = this.countdown.bind(this);\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n  }\n\n  countdown() {\n    const {\n      setIntervalId,\n      startedTime,\n      setSeconds,\n      elapsedTime\n    } = this.state;\n    const nowTime = new Date();\n    const nextElapsedTime = Math.floor((nowTime - startedTime) / 1000);\n    const time = startedTime ? setSeconds - nextElapsedTime - elapsedTime : setSeconds;\n\n    if (time === 0) {\n      clearInterval(setIntervalId);\n      alert('時間になりました！');\n    } else {\n      this.setState({\n        elapsedTime: nextElapsedTime\n      });\n    }\n  }\n\n  onStart() {\n    const id = setInterval(this.countdown, 1000);\n    const date = new Date();\n    this.setState({\n      startedTime: date,\n      setIntervalId: id\n    });\n  }\n\n  onStop(elapsedTime) {\n    const {\n      setIntervalId\n    } = this.state;\n    const date = new Date();\n    clearInterval(setIntervalId);\n    this.setState({\n      startedTime: date,\n      elapsedTime: elapsedTime,\n      setIntervalId: null\n    });\n  }\n\n  onCancel() {\n    const {\n      setIntervalId\n    } = this.state;\n    clearInterval(setIntervalId);\n    this.setState({\n      startedTime: null,\n      elapsedTime: 0,\n      setIntervalId: null\n    });\n  }\n\n  render() {\n    const {\n      setIntervalId,\n      startedTime,\n      setSeconds,\n      elapsedTime\n    } = this.state;\n    const progress = startedTime ? 100 - elapsedTime / setSeconds * 100 : 100;\n    const time = startedTime ? setSeconds - elapsedTime : setSeconds;\n    const text = String('00' + Math.floor(time / 3600)).slice(-2) + ':' + String('00' + Math.floor(time / 60) % 60).slice(-2) + ':' + String('0' + time % 60).slice(-2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      stroke: 5,\n      radius: 200,\n      progress: progress,\n      text: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginRight: '120px'\n      },\n      className: 'button' + (setIntervalId ? '' : ' button-disabled'),\n      type: \"button\",\n      disabled: setIntervalId ? false : true,\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: 'button' + (setSeconds === 0 ? ' button-disabled' : ''),\n      type: \"button\",\n      onClick: setIntervalId ? () => {\n        this.onStop(elapsedTime);\n      } : this.onStart,\n      disabled: setSeconds === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, setIntervalId ? '停止' : '開始')));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ylafaro/prog/react-timer/src/App.js"],"names":["React","ProgressBar","App","Component","constructor","props","state","startedTime","nowTime","setSeconds","elapsedTime","setIntervalId","countdown","bind","onStart","onStop","onCancel","Date","nextElapsedTime","Math","floor","time","clearInterval","alert","setState","id","setInterval","date","render","progress","text","String","slice","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport ProgressBar from './ProgressBar';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      startedTime: null, // 開始時刻\n      nowTime: null, // 現在時刻\n      setSeconds: 10, // 設定時間(秒単位)\n      elapsedTime: 0, // 経過時間(秒単位)\n      setIntervalId: null, // setIntervalのid\n    }\n\n    this.countdown = this.countdown.bind(this);\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n  }\n\n  countdown(){\n    const { setIntervalId, startedTime, setSeconds, elapsedTime} = this.state;\n    const nowTime = new Date();\n    const nextElapsedTime = Math.floor((nowTime - startedTime) / 1000);\n\n    const time = startedTime ? setSeconds - nextElapsedTime - elapsedTime : setSeconds;\n\n    if(time === 0){\n      clearInterval(setIntervalId);\n      alert('時間になりました！');\n    }else{\n      this.setState({elapsedTime: nextElapsedTime});\n    }\n  }\n\n  onStart(){\n    const id = setInterval(this.countdown,1000);\n    const date = new Date();\n    this.setState({\n      startedTime: date,\n      setIntervalId: id,\n    })\n  }\n\n  onStop(elapsedTime){\n    const { setIntervalId } = this.state;\n    const date = new Date();\n    clearInterval(setIntervalId);\n    this.setState({\n      startedTime: date,\n      elapsedTime: elapsedTime,\n      setIntervalId: null\n    })\n  }\n\n  onCancel(){\n    const { setIntervalId } = this.state;\n    clearInterval(setIntervalId);\n\n    this.setState({\n      startedTime: null,\n      elapsedTime: 0,\n      setIntervalId: null,\n    })\n  }\n\n  render(){\n    const { setIntervalId, startedTime, setSeconds, elapsedTime } = this.state;\n    const progress = startedTime ?  100 - (elapsedTime / setSeconds * 100) : 100; \n    const time = startedTime ? setSeconds - elapsedTime : setSeconds;\n    const text = String('00' + Math.floor(time / 3600)).slice(-2) + ':' + String('00' + Math.floor(time / 60) % 60).slice(-2) + ':' + String('0' + time % 60).slice(-2); \n\n    return (\n      <div className=\"App\">\n        <ProgressBar \n          stroke={5}\n          radius={200}\n          progress={progress}\n          text={text}\n        />\n        <div>\n          <button \n            style={{marginRight: '120px'}} \n            className={'button'+(setIntervalId ? '' : ' button-disabled')} \n            type='button' \n            disabled={setIntervalId ? false : true}\n            onClick={this.onCancel}\n            >\n              キャンセル\n          </button>\n          <button \n            className={'button'+(setSeconds === 0  ? ' button-disabled' : '')} \n            type='button'\n            onClick={setIntervalId ? ()=>{this.onStop(elapsedTime)} : this.onStart}\n            disabled={setSeconds === 0}\n          >\n            {setIntervalId ? '停止' : '開始'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}