{"ast":null,"code":"var _jsxFileName = \"/home/ylafaro/prog/react-timer/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ProgressBar from './ProgressBar';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startedTime: null,\n      // 開始時刻\n      nowTime: null,\n      // 現在時刻\n      setSeconds: 10,\n      // 設定時間(秒単位)\n      remainingSeconds: 10,\n      // 残り時間(秒単位)\n      setIntervalId: null,\n      // setIntervalのid\n      elapsedTime: 0 // 経過時間\n\n    };\n    this.countdown = this.countdown.bind(this);\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n  }\n\n  countdown() {\n    const {\n      setIntervalId,\n      startedTime,\n      setSeconds,\n      remainingSeconds\n    } = this.state;\n    const nowTime = new Date();\n    const elapsedTime = Math.floor((nowTime - startedTime) / 1000);\n    const time = startedTime ? remainingSeconds - elapsedTime : setSeconds;\n\n    if (time === 0) {\n      clearInterval(setIntervalId);\n      alert('時間になりました！');\n    }\n\n    this.setState({\n      elapsedTime: elapsedTime\n    });\n  }\n\n  onStart() {\n    const id = setInterval(this.countdown, 1000);\n    const date = new Date();\n    this.setState({\n      startedTime: date,\n      nowTime: date,\n      setIntervalId: id\n    });\n  }\n\n  onStop(remainingSeconds) {\n    const {\n      setIntervalId\n    } = this.state;\n    const date = new Date();\n    clearInterval(setIntervalId);\n    this.setState({\n      remainingSeconds: remainingSeconds,\n      startedTime: date,\n      nowTime: date,\n      setIntervalId: null\n    });\n  }\n\n  onCancel() {\n    const {\n      setIntervalId,\n      setSeconds\n    } = this.state;\n    clearInterval(setIntervalId);\n    this.setState({\n      startedTime: null,\n      nowTime: null,\n      remainingSeconds: setSeconds,\n      setIntervalId: null\n    });\n  }\n\n  render() {\n    const {\n      setIntervalId,\n      startedTime,\n      setSeconds,\n      remainingSeconds,\n      elapsedTime\n    } = this.state;\n    const progress = startedTime ? 100 - (setSeconds - remainingSeconds + elapsedTime) / setSeconds * 100 : 100;\n    const time = startedTime ? remainingSeconds - elapsedTime : setSeconds;\n    const text = String('00' + Math.floor(time / 3600)).slice(-2) + ':' + String('00' + Math.floor(time / 60) % 60).slice(-2) + ':' + String('0' + time % 60).slice(-2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      stroke: 5,\n      radius: 200,\n      progress: progress,\n      text: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginRight: '120px'\n      },\n      className: 'button' + (setIntervalId ? '' : ' button-disabled'),\n      type: \"button\",\n      disabled: setIntervalId ? false : true,\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: 'button' + (remainingSeconds === 0 ? ' button-disabled' : ''),\n      type: \"button\",\n      onClick: setIntervalId ? () => {\n        this.onStop(time);\n      } : this.onStart,\n      disabled: remainingSeconds === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, setIntervalId ? '停止' : '開始')));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ylafaro/prog/react-timer/src/App.js"],"names":["React","ProgressBar","App","Component","constructor","props","state","startedTime","nowTime","setSeconds","remainingSeconds","setIntervalId","elapsedTime","countdown","bind","onStart","onStop","onCancel","Date","Math","floor","time","clearInterval","alert","setState","id","setInterval","date","render","progress","text","String","slice","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,IADF;AACQ;AACnBC,MAAAA,OAAO,EAAE,IAFE;AAEI;AACfC,MAAAA,UAAU,EAAE,EAHD;AAGK;AAChBC,MAAAA,gBAAgB,EAAE,EAJP;AAIW;AACtBC,MAAAA,aAAa,EAAE,IALJ;AAKU;AACrBC,MAAAA,WAAW,EAAE,CANF,CAMK;;AANL,KAAb;AASA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,SAAS,GAAE;AACT,UAAM;AAAEF,MAAAA,aAAF;AAAiBJ,MAAAA,WAAjB;AAA8BE,MAAAA,UAA9B;AAAyCC,MAAAA;AAAzC,QAA8D,KAAKJ,KAAzE;AACA,UAAME,OAAO,GAAG,IAAIU,IAAJ,EAAhB;AACA,UAAMN,WAAW,GAAGO,IAAI,CAACC,KAAL,CAAW,CAACZ,OAAO,GAAGD,WAAX,IAA0B,IAArC,CAApB;AAEA,UAAMc,IAAI,GAAGd,WAAW,GAAGG,gBAAgB,GAAGE,WAAtB,GAAoCH,UAA5D;;AAEA,QAAGY,IAAI,KAAK,CAAZ,EAAc;AACZC,MAAAA,aAAa,CAACX,aAAD,CAAb;AACAY,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD;;AACD,SAAKC,QAAL,CAAc;AAACZ,MAAAA,WAAW,EAAEA;AAAd,KAAd;AACD;;AAEDG,EAAAA,OAAO,GAAE;AACP,UAAMU,EAAE,GAAGC,WAAW,CAAC,KAAKb,SAAN,EAAgB,IAAhB,CAAtB;AACA,UAAMc,IAAI,GAAG,IAAIT,IAAJ,EAAb;AACA,SAAKM,QAAL,CAAc;AACZjB,MAAAA,WAAW,EAAEoB,IADD;AAEZnB,MAAAA,OAAO,EAAEmB,IAFG;AAGZhB,MAAAA,aAAa,EAAEc;AAHH,KAAd;AAKD;;AAEDT,EAAAA,MAAM,CAACN,gBAAD,EAAkB;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAKL,KAA/B;AACA,UAAMqB,IAAI,GAAG,IAAIT,IAAJ,EAAb;AACAI,IAAAA,aAAa,CAACX,aAAD,CAAb;AACA,SAAKa,QAAL,CAAc;AACZd,MAAAA,gBAAgB,EAAEA,gBADN;AAEZH,MAAAA,WAAW,EAAEoB,IAFD;AAGZnB,MAAAA,OAAO,EAAEmB,IAHG;AAIZhB,MAAAA,aAAa,EAAE;AAJH,KAAd;AAMD;;AAEDM,EAAAA,QAAQ,GAAE;AACR,UAAM;AAAEN,MAAAA,aAAF;AAAiBF,MAAAA;AAAjB,QAAgC,KAAKH,KAA3C;AACAgB,IAAAA,aAAa,CAACX,aAAD,CAAb;AAEA,SAAKa,QAAL,CAAc;AACZjB,MAAAA,WAAW,EAAE,IADD;AAEZC,MAAAA,OAAO,EAAE,IAFG;AAGZE,MAAAA,gBAAgB,EAAED,UAHN;AAIZE,MAAAA,aAAa,EAAE;AAJH,KAAd;AAMD;;AAEDiB,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEjB,MAAAA,aAAF;AAAiBJ,MAAAA,WAAjB;AAA8BE,MAAAA,UAA9B;AAAyCC,MAAAA,gBAAzC;AAA2DE,MAAAA;AAA3D,QAA2E,KAAKN,KAAtF;AACA,UAAMuB,QAAQ,GAAGtB,WAAW,GAAI,MAAO,CAAEE,UAAU,GAAGC,gBAAd,GAAkCE,WAAnC,IAAkDH,UAAlD,GAA+D,GAA1E,GAAiF,GAA7G;AACA,UAAMY,IAAI,GAAGd,WAAW,GAAGG,gBAAgB,GAAGE,WAAtB,GAAoCH,UAA5D;AACA,UAAMqB,IAAI,GAAGC,MAAM,CAAC,OAAOZ,IAAI,CAACC,KAAL,CAAWC,IAAI,GAAG,IAAlB,CAAR,CAAN,CAAuCW,KAAvC,CAA6C,CAAC,CAA9C,IAAmD,GAAnD,GAAyDD,MAAM,CAAC,OAAOZ,IAAI,CAACC,KAAL,CAAWC,IAAI,GAAG,EAAlB,IAAwB,EAAhC,CAAN,CAA0CW,KAA1C,CAAgD,CAAC,CAAjD,CAAzD,GAA+G,GAA/G,GAAqHD,MAAM,CAAC,MAAMV,IAAI,GAAG,EAAd,CAAN,CAAwBW,KAAxB,CAA8B,CAAC,CAA/B,CAAlI;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAE,CADV;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,QAAQ,EAAEH,QAHZ;AAIE,MAAA,IAAI,EAAEC,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AAACG,QAAAA,WAAW,EAAE;AAAd,OADT;AAEE,MAAA,SAAS,EAAE,YAAUtB,aAAa,GAAG,EAAH,GAAQ,kBAA/B,CAFb;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAEA,aAAa,GAAG,KAAH,GAAW,IAJpC;AAKE,MAAA,OAAO,EAAE,KAAKM,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,eAUE;AACE,MAAA,SAAS,EAAE,YAAUP,gBAAgB,KAAK,CAArB,GAA0B,kBAA1B,GAA+C,EAAzD,CADb;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAEC,aAAa,GAAG,MAAI;AAAC,aAAKK,MAAL,CAAYK,IAAZ;AAAkB,OAA1B,GAA6B,KAAKN,OAH1D;AAIE,MAAA,QAAQ,EAAEL,gBAAgB,KAAK,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGC,aAAa,GAAG,IAAH,GAAU,IAN1B,CAVF,CAPF,CADF;AA6BD;;AArG+B;;AAwGlC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport ProgressBar from './ProgressBar';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      startedTime: null, // 開始時刻\n      nowTime: null, // 現在時刻\n      setSeconds: 10, // 設定時間(秒単位)\n      remainingSeconds: 10, // 残り時間(秒単位)\n      setIntervalId: null, // setIntervalのid\n      elapsedTime: 0, // 経過時間\n    }\n\n    this.countdown = this.countdown.bind(this);\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n  }\n\n  countdown(){\n    const { setIntervalId, startedTime, setSeconds,remainingSeconds } = this.state;\n    const nowTime = new Date();\n    const elapsedTime = Math.floor((nowTime - startedTime) / 1000);\n\n    const time = startedTime ? remainingSeconds - elapsedTime : setSeconds;\n\n    if(time === 0){\n      clearInterval(setIntervalId);\n      alert('時間になりました！');\n    }\n    this.setState({elapsedTime: elapsedTime});\n  }\n\n  onStart(){\n    const id = setInterval(this.countdown,1000);\n    const date = new Date();\n    this.setState({\n      startedTime: date,\n      nowTime: date, \n      setIntervalId: id,\n    })\n  }\n\n  onStop(remainingSeconds){\n    const { setIntervalId } = this.state;\n    const date = new Date();\n    clearInterval(setIntervalId);\n    this.setState({\n      remainingSeconds: remainingSeconds,\n      startedTime: date,\n      nowTime: date, \n      setIntervalId: null\n    })\n  }\n\n  onCancel(){\n    const { setIntervalId, setSeconds } = this.state;\n    clearInterval(setIntervalId);\n\n    this.setState({\n      startedTime: null,\n      nowTime: null,\n      remainingSeconds: setSeconds,\n      setIntervalId: null,\n    })\n  }\n\n  render(){\n    const { setIntervalId, startedTime, setSeconds,remainingSeconds, elapsedTime } = this.state;\n    const progress = startedTime ?  100 - (((setSeconds - remainingSeconds) + elapsedTime) / setSeconds * 100) : 100; \n    const time = startedTime ? remainingSeconds - elapsedTime : setSeconds;\n    const text = String('00' + Math.floor(time / 3600)).slice(-2) + ':' + String('00' + Math.floor(time / 60) % 60).slice(-2) + ':' + String('0' + time % 60).slice(-2); \n\n    return (\n      <div className=\"App\">\n        <ProgressBar \n          stroke={5}\n          radius={200}\n          progress={progress}\n          text={text}\n        />\n        <div>\n          <button \n            style={{marginRight: '120px'}} \n            className={'button'+(setIntervalId ? '' : ' button-disabled')} \n            type='button' \n            disabled={setIntervalId ? false : true}\n            onClick={this.onCancel}\n            >\n              キャンセル\n          </button>\n          <button \n            className={'button'+(remainingSeconds === 0  ? ' button-disabled' : '')} \n            type='button'\n            onClick={setIntervalId ? ()=>{this.onStop(time)} : this.onStart}\n            disabled={remainingSeconds === 0}\n          >\n            {setIntervalId ? '停止' : '開始'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}