{"ast":null,"code":"var _jsxFileName = \"/home/ylafaro/prog/react-timer/src/ProgressBar.js\";\nimport React from 'react';\n\nclass ProgressBar extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      radius,\n      stroke\n    } = this.props;\n    this.normalizedRadius = radius - stroke * 2;\n    this.circumference = this.normalizedRadius * 2 * Math.PI;\n  }\n\n  render() {\n    const {\n      radius,\n      stroke,\n      progress,\n      text\n    } = this.props;\n    const strokeDashoffset = this.circumference - progress / 100 * this.circumference;\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      height: radius * 2,\n      width: radius * 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      stroke: \"#3CB371\",\n      fill: \"transparent\",\n      strokeWidth: stroke,\n      strokeDasharray: this.circumference + ' ' + this.circumference,\n      style: {\n        strokeDashoffset\n      },\n      \"stroke-width\": stroke,\n      r: this.normalizedRadius,\n      cx: radius,\n      cy: radius,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      x: radius,\n      y: radius,\n      style: {\n        fontSize: '80px'\n      },\n      fill: \"#3CB371\",\n      textAnchor: \"middle\",\n      dominantBaseline: \"central\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, text));\n  }\n\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["/home/ylafaro/prog/react-timer/src/ProgressBar.js"],"names":["React","ProgressBar","Component","constructor","props","radius","stroke","normalizedRadius","circumference","Math","PI","render","progress","text","strokeDashoffset","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqB,KAAKF,KAAhC;AAEA,SAAKG,gBAAL,GAAwBF,MAAM,GAAGC,MAAM,GAAG,CAA1C;AACA,SAAKE,aAAL,GAAqB,KAAKD,gBAAL,GAAwB,CAAxB,GAA4BE,IAAI,CAACC,EAAtD;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEN,MAAAA,MAAF;AAAUC,MAAAA,MAAV;AAAkBM,MAAAA,QAAlB;AAA4BC,MAAAA;AAA5B,QAAqC,KAAKT,KAAhD;AACA,UAAMU,gBAAgB,GAAG,KAAKN,aAAL,GAAqBI,QAAQ,GAAG,GAAX,GAAiB,KAAKJ,aAApE;AAEA,wBACI;AACI,MAAA,MAAM,EAAEH,MAAM,GAAG,CADrB;AAEI,MAAA,KAAK,EAAEA,MAAM,GAAG,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AACI,MAAA,MAAM,EAAC,SADX;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,WAAW,EAAGC,MAHlB;AAII,MAAA,eAAe,EAAG,KAAKE,aAAL,GAAqB,GAArB,GAA2B,KAAKA,aAJtD;AAKI,MAAA,KAAK,EAAG;AAAEM,QAAAA;AAAF,OALZ;AAMI,sBAAeR,MANnB;AAOI,MAAA,CAAC,EAAG,KAAKC,gBAPb;AAQI,MAAA,EAAE,EAAGF,MART;AASI,MAAA,EAAE,EAAGA,MATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAeI;AACI,MAAA,CAAC,EAAEA,MADP;AAEI,MAAA,CAAC,EAAEA,MAFP;AAGI,MAAA,KAAK,EAAE;AAACU,QAAAA,QAAQ,EAAE;AAAX,OAHX;AAII,MAAA,IAAI,EAAC,SAJT;AAKI,MAAA,UAAU,EAAC,QALf;AAMI,MAAA,gBAAgB,EAAC,SANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOEF,IAPF,CAfJ,CADJ;AA0BH;;AAxCqC;;AA2C1C,eAAeZ,WAAf","sourcesContent":["import React from 'react';\n\nclass ProgressBar extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        const { radius, stroke } = this.props;\n    \n        this.normalizedRadius = radius - stroke * 2;\n        this.circumference = this.normalizedRadius * 2 * Math.PI;\n    }\n\n    render(){\n        const { radius, stroke, progress, text } = this.props;\n        const strokeDashoffset = this.circumference - progress / 100 * this.circumference;\n\n        return (\n            <svg\n                height={radius * 2}\n                width={radius * 2}\n            >\n                <circle\n                    stroke=\"#3CB371\"\n                    fill=\"transparent\"\n                    strokeWidth={ stroke }\n                    strokeDasharray={ this.circumference + ' ' + this.circumference }\n                    style={ { strokeDashoffset } }\n                    stroke-width={ stroke }\n                    r={ this.normalizedRadius }\n                    cx={ radius }\n                    cy={ radius }\n                />\n                <text \n                    x={radius} \n                    y={radius}\n                    style={{fontSize: '80px'}}\n                    fill='#3CB371'\n                    textAnchor='middle'\n                    dominantBaseline='central'\n                >{text}</text>\n            </svg>\n        )\n    }\n}\n\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}